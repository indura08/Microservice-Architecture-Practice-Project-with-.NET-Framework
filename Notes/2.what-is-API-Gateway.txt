1Ô∏è‚É£ What is an API Gateway?
--------------------------

An API Gateway is a single entry point for all requests going to your microservices. Instead of clients (frontend, mobile apps, etc.) calling each 
microservice directly, they send requests to the API Gateway, and it forwards them to the right service.

Think of an API Gateway like a restaurant waiter:
üçΩÔ∏è You order food from the waiter (API Gateway), and the waiter brings your order from the correct kitchen (Microservice).

Why Use an API Gateway?
-----------------------

‚úÖ Simplifies communication ‚Üí Clients don‚Äôt need to know about all microservices.
‚úÖ Load balancing ‚Üí It can distribute traffic efficiently.
‚úÖ Security ‚Üí Can handle authentication & rate-limiting.
‚úÖ Centralized logging & monitoring ‚Üí Easier to track API calls.


2Ô∏è‚É£ How to Implement an API Gateway in ASP.NET Core
-----------------------------------------------

To set up an API Gateway for your E-commerce Microservices, we will use Ocelot, a popular .NET API Gateway library.

üîπ Steps to Set Up API Gateway:

Step 1: Create an API Gateway Project

In your existing solution, add a new ASP.NET Core Web API project.

Name it something like "APIGateway".

Install the Ocelot NuGet package:


